# Generated by Django 5.2.1 on 2025-05-26 07:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('desertionNo', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('happenDt', models.DateField(blank=True, null=True)),
                ('happenPlace', models.CharField(max_length=100)),
                ('kindCd', models.CharField(max_length=10)),
                ('upKindCd', models.CharField(max_length=10)),
                ('upKindNm', models.CharField(max_length=20)),
                ('kindNm', models.CharField(max_length=30)),
                ('colorCd', models.CharField(max_length=30)),
                ('age', models.CharField(max_length=30)),
                ('weight', models.CharField(max_length=20)),
                ('sexCd', models.CharField(max_length=1)),
                ('neuterYn', models.CharField(max_length=1)),
                ('specialMark', models.TextField(blank=True, null=True)),
                ('processState', models.CharField(max_length=20)),
                ('endReason', models.CharField(blank=True, max_length=30, null=True)),
                ('updTm', models.DateTimeField(blank=True, null=True)),
                ('rfidCd', models.CharField(blank=True, max_length=30, null=True)),
                ('popfile1', models.TextField(blank=True, null=True)),
                ('vaccinationChk', models.CharField(blank=True, max_length=1, null=True)),
                ('healthChk', models.CharField(blank=True, max_length=1, null=True)),
                ('sfeSoci', models.CharField(blank=True, max_length=1, null=True)),
                ('sfeHealth', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'Animal',
            },
        ),
        migrations.CreateModel(
            name='Shelter',
            fields=[
                ('careRegNo', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('careNm', models.CharField(max_length=20)),
                ('orgNm', models.CharField(max_length=20)),
                ('divisionNm', models.CharField(max_length=20)),
                ('saveTrgtAnimal', models.CharField(max_length=20)),
                ('careAddr', models.CharField(max_length=50)),
                ('jibunAddr', models.CharField(max_length=50)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('weekOprStime', models.TimeField(blank=True, null=True)),
                ('weekOprEtime', models.TimeField(blank=True, null=True)),
                ('weekendOprStime', models.TimeField(blank=True, null=True)),
                ('weekendOprEtime', models.TimeField(blank=True, null=True)),
                ('careTel', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Shelter',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField()),
                ('image_url', models.TextField(blank=True, null=True)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.animal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.shelter')),
            ],
            options={
                'db_table': 'Review',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('reported_dt', models.DateField()),
                ('reported_time', models.TimeField()),
                ('location', models.CharField(max_length=100)),
                ('estimated_kind', models.CharField(max_length=50)),
                ('sex_cd', models.CharField(max_length=1)),
                ('image_url', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.shelter')),
            ],
            options={
                'db_table': 'Report',
            },
        ),
        migrations.AddField(
            model_name='animal',
            name='careRegNo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.shelter'),
        ),
        migrations.CreateModel(
            name='Adoption',
            fields=[
                ('adoption_id', models.AutoField(primary_key=True, serialize=False)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('신청', '신청'), ('승인됨', '승인됨'), ('거절됨', '거절됨'), ('완료됨', '완료됨')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.animal')),
                ('shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.shelter')),
            ],
            options={
                'db_table': 'Adoption',
            },
        ),
    ]
